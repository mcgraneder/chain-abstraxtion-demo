/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ForwarderV2,
  ForwarderV2Interface,
} from "../../../contracts/DelegatedExecutorV2.sol/ForwarderV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "LogCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "LogReceivedEther",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "domainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ForwarderV2.UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f3b806100206000396000f3fe6080604052600436106100385760003560e01c8063252f5a17146100445780632d0335ab14610076578063c54d43ca146100ac57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f3660046109bf565b6100ce565b60405190815260200160405180910390f35b34801561008257600080fd5b506100646100913660046109f4565b6001600160a01b031660009081526020819052604090205490565b3480156100b857600080fd5b506100cc6100c7366004610a58565b6101a3565b005b604080518082018252600881526722bc32b1baba37b960c11b602091820152815180830183526005815264302e302e3160d81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527feb35d5f9843d4076628c4747d195abdd0312e0b8b8f5812a706f3d25ea0b1074818401527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885606082015260808101939093523060a0808501919091528251808503909101815260c0909301909152815191012090565b6101ee6101b08587610b9f565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086925061035d915050565b6101f7816104ba565b60005b63ffffffff81168511156103555785858263ffffffff1681811061022057610220610cae565b90506020028101906102329190610cc4565b6020013547101561029c5760405162461bcd60e51b815260206004820152602960248201527f4578656375746f723a20696e73756666696369656e7420626173652061737365604482015268742062616c616e636560b81b60648201526084015b60405180910390fd5b61034386868363ffffffff168181106102b7576102b7610cae565b90506020028101906102c99190610cc4565b6102d79060208101906109f4565b87878463ffffffff168181106102ef576102ef610cae565b90506020028101906103019190610cc4565b6020013588888563ffffffff1681811061031d5761031d610cae565b905060200281019061032f9190610cc4565b61033d906040810190610ce4565b866104e3565b8061034d81610d41565b9150506101fa565b505050505050565b600080838060200190518101906103749190610d95565b91509150600061044b826104457f32be80f8c0afd54ef88dc5bd45d55f5f9940edbfcf488de226e7e2ed1281b50f6103ab8a6105c2565b6001600160a01b038916600090815260208190526040902054604080516020810194909452830191909152606082015246608082015260a0810187905260c0016040516020818303038152906040528051906020012061040a876100ce565b6040805161190160f01b6020808301919091526022820193909352604280820194909452815180820390940184526062019052815191012090565b90610740565b9050806001600160a01b0316846001600160a01b0316146103555760405162461bcd60e51b8152602060048201526024808201527f4578656375746f723a206661696c656420746f20766572696679207369676e616044820152637475726560e01b6064820152608401610293565b6001600160a01b0381166000908152602081905260409020546104de600182610e18565b505050565b600080866001600160a01b03168686868660405160200161050693929190610e30565b60408051601f198184030181529082905261052091610e56565b60006040518083038185875af1925050503d806000811461055d576040519150601f19603f3d011682016040523d82523d6000602084013e610562565b606091505b5091509150866001600160a01b03167f202ca0633e9bf52b1d9ffc5784badd7db89fdd8a05bea524c99853429017f7ae8787876040516105a493929190610e68565b60405180910390a2816105b957805160208201fd5b50505050505050565b600080825167ffffffffffffffff8111156105df576105df610b07565b604051908082528060200260200182016040528015610608578160200160208202803683370190505b50905060005b8351811015610710577fa5a377ec5d641455aba8444d442858ad35168aacdd7f3ada9b2423962a45fa4184828151811061064a5761064a610cae565b60200260200101516000015185838151811061066857610668610cae565b60200260200101516020015186848151811061068657610686610cae565b602002602001015160400151805190602001206040516020016106cb94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b604051602081830303815290604052805190602001208282815181106106f3576106f3610cae565b60209081029190910101528061070881610e9e565b91505061060e565b50806040516020016107229190610eb9565b60405160208183030381529060405280519060200120915050919050565b600080600061074f8585610764565b9150915061075c816107aa565b509392505050565b60008082516041141561079b5760208301516040840151606085015160001a61078f878285856108fb565b945094505050506107a3565b506000905060025b9250929050565b60008160048111156107be576107be610eef565b14156107c75750565b60018160048111156107db576107db610eef565b14156108295760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610293565b600281600481111561083d5761083d610eef565b141561088b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610293565b600381600481111561089f5761089f610eef565b14156108f85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610293565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561093257506000905060036109b6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610986573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166109af576000600192509250506109b6565b9150600090505b94509492505050565b6000602082840312156109d157600080fd5b5035919050565b80356001600160a01b03811681146109ef57600080fd5b919050565b600060208284031215610a0657600080fd5b610a0f826109d8565b9392505050565b60008083601f840112610a2857600080fd5b50813567ffffffffffffffff811115610a4057600080fd5b6020830191508360208285010111156107a357600080fd5b600080600080600060608688031215610a7057600080fd5b853567ffffffffffffffff80821115610a8857600080fd5b818801915088601f830112610a9c57600080fd5b813581811115610aab57600080fd5b8960208260051b8501011115610ac057600080fd5b602092830197509550908701359080821115610adb57600080fd5b50610ae888828901610a16565b9094509250610afb9050604087016109d8565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610b4057610b40610b07565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b6f57610b6f610b07565b604052919050565b600067ffffffffffffffff821115610b9157610b91610b07565b50601f01601f191660200190565b600067ffffffffffffffff80841115610bba57610bba610b07565b8360051b6020610bcb818301610b46565b868152918501918181019036841115610be357600080fd5b865b84811015610ca257803586811115610bfd5760008081fd5b88016060368290031215610c115760008081fd5b610c19610b1d565b610c22826109d8565b8152858201358682015260408083013589811115610c405760008081fd5b929092019136601f840112610c555760008081fd5b8235610c68610c6382610b77565b610b46565b8181523689838701011115610c7d5760008081fd5b818986018a830137600091810189019190915290820152845250918301918301610be5565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e19833603018112610cda57600080fd5b9190910192915050565b6000808335601e19843603018112610cfb57600080fd5b83018035915067ffffffffffffffff821115610d1657600080fd5b6020019150368190038213156107a357600080fd5b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681811415610d5b57610d5b610d2b565b6001019392505050565b60005b83811015610d80578181015183820152602001610d68565b83811115610d8f576000848401525b50505050565b60008060408385031215610da857600080fd5b82519150602083015167ffffffffffffffff811115610dc657600080fd5b8301601f81018513610dd757600080fd5b8051610de5610c6382610b77565b818152866020838501011115610dfa57600080fd5b610e0b826020830160208601610d65565b8093505050509250929050565b60008219821115610e2b57610e2b610d2b565b500190565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610cda818460208701610d65565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b6000600019821415610eb257610eb2610d2b565b5060010190565b815160009082906020808601845b83811015610ee357815185529382019390820190600101610ec7565b50929695505050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220fa73bc477ddf5476436e169749c85d78f194c72258090202e99662b6412c633c64736f6c63430008090033";

type ForwarderV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForwarderV2__factory extends ContractFactory {
  constructor(...args: ForwarderV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ForwarderV2> {
    return super.deploy(overrides || {}) as Promise<ForwarderV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForwarderV2 {
    return super.attach(address) as ForwarderV2;
  }
  override connect(signer: Signer): ForwarderV2__factory {
    return super.connect(signer) as ForwarderV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderV2Interface {
    return new utils.Interface(_abi) as ForwarderV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForwarderV2 {
    return new Contract(address, _abi, signerOrProvider) as ForwarderV2;
  }
}
