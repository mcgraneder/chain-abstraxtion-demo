/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ForwarderV2,
  ForwarderV2Interface,
} from "../../../contracts/DelegatedExecutorV2.sol/ForwarderV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "LogCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "LogReceivedEther",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "domainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ForwarderV2.UserOperation[]",
        name: "userOps",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ecc806100206000396000f3fe6080604052600436106100385760003560e01c8063252f5a17146100445780632d0335ab14610076578063c54d43ca146100ac57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610950565b6100ce565b60405190815260200160405180910390f35b34801561008257600080fd5b50610064610091366004610985565b6001600160a01b031660009081526020819052604090205490565b3480156100b857600080fd5b506100cc6100c73660046109e9565b6101a3565b005b604080518082018252600881526722bc32b1baba37b960c11b602091820152815180830183526005815264302e302e3160d81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527feb35d5f9843d4076628c4747d195abdd0312e0b8b8f5812a706f3d25ea0b1074818401527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885606082015260808101939093523060a0808501919091528251808503909101815260c0909301909152815191012090565b6101ee6101b08587610b30565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086925061035d915050565b6101f781610454565b60005b63ffffffff81168511156103555785858263ffffffff1681811061022057610220610c3f565b90506020028101906102329190610c55565b6020013547101561029c5760405162461bcd60e51b815260206004820152602960248201527f4578656375746f723a20696e73756666696369656e7420626173652061737365604482015268742062616c616e636560b81b60648201526084015b60405180910390fd5b61034386868363ffffffff168181106102b7576102b7610c3f565b90506020028101906102c99190610c55565b6102d7906020810190610985565b87878463ffffffff168181106102ef576102ef610c3f565b90506020028101906103019190610c55565b6020013588888563ffffffff1681811061031d5761031d610c3f565b905060200281019061032f9190610c55565b61033d906040810190610c75565b8661047d565b8061034d81610cd2565b9150506101fa565b505050505050565b600080838060200190518101906103749190610d26565b91509150600061044b826104457f32be80f8c0afd54ef88dc5bd45d55f5f9940edbfcf488de226e7e2ed1281b50f6103ab8a610553565b6001600160a01b038916600090815260208190526040902054604080516020810194909452830191909152606082015246608082015260a0810187905260c0016040516020818303038152906040528051906020012061040a876100ce565b6040805161190160f01b6020808301919091526022820193909352604280820194909452815180820390940184526062019052815191012090565b906106d1565b50505050505050565b6001600160a01b038116600090815260208190526040902054610478600182610da9565b505050565b600080866001600160a01b0316868686866040516020016104a093929190610dc1565b60408051601f19818403018152908290526104ba91610de7565b60006040518083038185875af1925050503d80600081146104f7576040519150601f19603f3d011682016040523d82523d6000602084013e6104fc565b606091505b5091509150866001600160a01b03167f202ca0633e9bf52b1d9ffc5784badd7db89fdd8a05bea524c99853429017f7ae87878760405161053e93929190610df9565b60405180910390a28161044b57805160208201fd5b600080825167ffffffffffffffff81111561057057610570610a98565b604051908082528060200260200182016040528015610599578160200160208202803683370190505b50905060005b83518110156106a1577fa5a377ec5d641455aba8444d442858ad35168aacdd7f3ada9b2423962a45fa418482815181106105db576105db610c3f565b6020026020010151600001518583815181106105f9576105f9610c3f565b60200260200101516020015186848151811061061757610617610c3f565b6020026020010151604001518051906020012060405160200161065c94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040516020818303038152906040528051906020012082828151811061068457610684610c3f565b60209081029190910101528061069981610e2f565b91505061059f565b50806040516020016106b39190610e4a565b60405160208183030381529060405280519060200120915050919050565b60008060006106e085856106f5565b915091506106ed8161073b565b509392505050565b60008082516041141561072c5760208301516040840151606085015160001a6107208782858561088c565b94509450505050610734565b506000905060025b9250929050565b600081600481111561074f5761074f610e80565b14156107585750565b600181600481111561076c5761076c610e80565b14156107ba5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610293565b60028160048111156107ce576107ce610e80565b141561081c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610293565b600381600481111561083057610830610e80565b14156108895760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610293565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156108c35750600090506003610947565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610917573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661094057600060019250925050610947565b9150600090505b94509492505050565b60006020828403121561096257600080fd5b5035919050565b80356001600160a01b038116811461098057600080fd5b919050565b60006020828403121561099757600080fd5b6109a082610969565b9392505050565b60008083601f8401126109b957600080fd5b50813567ffffffffffffffff8111156109d157600080fd5b60208301915083602082850101111561073457600080fd5b600080600080600060608688031215610a0157600080fd5b853567ffffffffffffffff80821115610a1957600080fd5b818801915088601f830112610a2d57600080fd5b813581811115610a3c57600080fd5b8960208260051b8501011115610a5157600080fd5b602092830197509550908701359080821115610a6c57600080fd5b50610a79888289016109a7565b9094509250610a8c905060408701610969565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610ad157610ad1610a98565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b0057610b00610a98565b604052919050565b600067ffffffffffffffff821115610b2257610b22610a98565b50601f01601f191660200190565b600067ffffffffffffffff80841115610b4b57610b4b610a98565b8360051b6020610b5c818301610ad7565b868152918501918181019036841115610b7457600080fd5b865b84811015610c3357803586811115610b8e5760008081fd5b88016060368290031215610ba25760008081fd5b610baa610aae565b610bb382610969565b8152858201358682015260408083013589811115610bd15760008081fd5b929092019136601f840112610be65760008081fd5b8235610bf9610bf482610b08565b610ad7565b8181523689838701011115610c0e5760008081fd5b818986018a830137600091810189019190915290820152845250918301918301610b76565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e19833603018112610c6b57600080fd5b9190910192915050565b6000808335601e19843603018112610c8c57600080fd5b83018035915067ffffffffffffffff821115610ca757600080fd5b60200191503681900382131561073457600080fd5b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681811415610cec57610cec610cbc565b6001019392505050565b60005b83811015610d11578181015183820152602001610cf9565b83811115610d20576000848401525b50505050565b60008060408385031215610d3957600080fd5b82519150602083015167ffffffffffffffff811115610d5757600080fd5b8301601f81018513610d6857600080fd5b8051610d76610bf482610b08565b818152866020838501011115610d8b57600080fd5b610d9c826020830160208601610cf6565b8093505050509250929050565b60008219821115610dbc57610dbc610cbc565b500190565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610c6b818460208701610cf6565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b6000600019821415610e4357610e43610cbc565b5060010190565b815160009082906020808601845b83811015610e7457815185529382019390820190600101610e58565b50929695505050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220faf729e04aae69f6c760f0f1f6199e93c1bedef06aff6129e259894bee17dd1264736f6c63430008090033";

type ForwarderV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForwarderV2__factory extends ContractFactory {
  constructor(...args: ForwarderV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ForwarderV2> {
    return super.deploy(overrides || {}) as Promise<ForwarderV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForwarderV2 {
    return super.attach(address) as ForwarderV2;
  }
  override connect(signer: Signer): ForwarderV2__factory {
    return super.connect(signer) as ForwarderV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderV2Interface {
    return new utils.Interface(_abi) as ForwarderV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForwarderV2 {
    return new Contract(address, _abi, signerOrProvider) as ForwarderV2;
  }
}
